{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/data/projects.ts"],"sourcesContent":["import { StaticImageData } from \"next/image\";\n\nexport interface ProjectImage {\n  [key: string]: StaticImageData;\n}\n\nexport type Project = {\n  slug: string;\n  title: string;\n  description: string;\n  tag: string[];\n  image: StaticImageData | null;\n  layout: string;\n  year: number;\n  month: number;\n  url?: string;\n  client: string;\n};\n\nexport const projects: Project[] = [\n  {\n    slug: \"nazosui\",\n    title: \"ナゾスイ\",\n    description: \"川崎水族館での謎解き\",\n    tag: [\"nazo\", \"editorial\"],\n    image: \"nazosui.jpg\",\n    layout: \"standard\",\n    year: 2023,\n    month: 4,\n    url: \"http://nazosui.kawa-sui.com/\",\n    client: \"RIDDLER\",\n  },\n  {\n    slug: \"maitsuki\",\n    title: \"毎月謎コン\",\n    description:\n      \"毎月謎コン様のメインビジュアルやロゴなどのグラフィックデザインを担当しました！</ br>「毎月、面白かった謎解きを集めよう」といったカジュアルな企画なため、グラフィックも親しみを持てるような温かい配色にしたり、「いかにも謎解き公演に居そう」な人たちを描いてみたりしています。\",\n    tag: [\"logo\", \"graphic\"],\n    image: \"maitsuki.jpg\",\n    layout: \"custom\",\n    year: 2023,\n    month: 4,\n    url: \"https://x.com/nazocontest\",\n    client: \"毎月謎コン\",\n  },\n  {\n    slug: \"towerush\",\n    title: \"TOWERUSH\",\n    description: \"東京タワーでのイベント\",\n    tag: [\"logo\", \"graphic\", \"event\"],\n    image: null,\n    layout: \"standard\",\n    year: 2023,\n    month: 12,\n    url: \"https://x.com/towerush_q\",\n    client: \"TOWERUSH\",\n  },\n  {\n    slug: \"lightriddlefes\",\n    title: \"ライト謎解きフェス ロゴ\",\n    description: \"東京タワーでのイベント\",\n    tag: [\"logo\"],\n    image: \"lightriddlefes.jpg\",\n    layout: \"standard\",\n    year: 2024,\n    month: 7,\n    url: \"https://x.com/lightriddlefes\",\n    client: \"TOWERUSH\",\n  },\n];\n"],"names":[],"mappings":";;;AAmBO,MAAM,WAAsB;IACjC;QACE,MAAM;QACN,OAAO;QACP,aAAa;QACb,KAAK;YAAC;YAAQ;SAAY;QAC1B,OAAO;QACP,QAAQ;QACR,MAAM;QACN,OAAO;QACP,KAAK;QACL,QAAQ;IACV;IACA;QACE,MAAM;QACN,OAAO;QACP,aACE;QACF,KAAK;YAAC;YAAQ;SAAU;QACxB,OAAO;QACP,QAAQ;QACR,MAAM;QACN,OAAO;QACP,KAAK;QACL,QAAQ;IACV;IACA;QACE,MAAM;QACN,OAAO;QACP,aAAa;QACb,KAAK;YAAC;YAAQ;YAAW;SAAQ;QACjC,OAAO;QACP,QAAQ;QACR,MAAM;QACN,OAAO;QACP,KAAK;QACL,QAAQ;IACV;IACA;QACE,MAAM;QACN,OAAO;QACP,aAAa;QACb,KAAK;YAAC;SAAO;QACb,OAAO;QACP,QAAQ;QACR,MAAM;QACN,OAAO;QACP,KAAK;QACL,QAAQ;IACV;CACD"}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/work/%5BprojectId%5D/page.tsx"],"sourcesContent":["\nimport { projects } from '../../data/projects';\nimport dynamic from 'next/dynamic';\nimport { notFound } from 'next/navigation';\n\ntype Props = {\n  params: {\n    projectId: string\n  }\n}\n\nexport default async function ProjectDetailPage({ params }: Props) {\n  const projectId = params.projectId;\n  const project = projects.find(p => p.slug === projectId);\n  console.log(\"params:\", params); // ここで params の型を確認\n  if (!project) {\n    notFound();\n  }\n\n  const ProjectLayout = dynamic(\n    () => import(`../../components/project-layouts/${projectId}`),\n    { \n      loading: () => <div>Loading...</div>,\n      ssr: true \n    }\n  );\n\n  return <ProjectLayout project={project} />;\n}\n\nexport function generateStaticParams() {\n  return projects.map(project => ({\n    projectId: project.slug,\n  }));\n}\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AAAA;;;;;AAQe,eAAe,kBAAkB,EAAE,MAAM,EAAS;IAC/D,MAAM,YAAY,OAAO,SAAS;IAClC,MAAM,UAAU,uHAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK;IAC9C,QAAQ,GAAG,CAAC,WAAW,SAAS,mBAAmB;IACnD,IAAI,CAAC,SAAS;QACZ,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IACT;IAEA,MAAM,gBAAgB,CAAA,GAAA,+JAAA,CAAA,UAAO,AAAD,EAC1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBAAa,CAAC,iCAAiC,EAAE,WAAW,GAC5D;QACE,SAAS,kBAAM,8OAAC;0BAAI;;;;;;QACpB,KAAK;IACP;IAGF,qBAAO,8OAAC;QAAc,SAAS;;;;;;AACjC;AAEO,SAAS;IACd,OAAO,uHAAA,CAAA,WAAQ,CAAC,GAAG,CAAC,CAAA,UAAW,CAAC;YAC9B,WAAW,QAAQ,IAAI;QACzB,CAAC;AACH"}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}