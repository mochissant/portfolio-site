{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/components/HomepageContent.tsx"],"sourcesContent":["\"use client\";\n\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\n\n// 元の単語リスト\nconst words = [\"logo\", \"graphic\", \"editorial\", \"UI\", \"UX\", \"event\"];\n\n// 配列をシャッフルする関数\nconst shuffleArray = (array: string[]) => {\n  return [...array].sort(() => Math.random() - 0.5);\n};\n\nexport function HomepageContent() {\n  const [shuffledWords, setShuffledWords] = useState<string[]>([]);\n  const [index, setIndex] = useState(0);\n  const [animationFinished, setAnimationFinished] = useState(false);\n\n  useEffect(() => {\n    setShuffledWords(shuffleArray(words)); // コンポーネントマウント時にシャッフル\n  }, []);\n\n  useEffect(() => {\n    if (index < shuffledWords.length) {\n      const timeout = setTimeout(() => {\n        setIndex((prev) => prev + 1);\n      }, 1500); // 1.5秒ごとに次の単語へ\n\n      return () => clearTimeout(timeout);\n    } else {\n      setAnimationFinished(true);\n    }\n  }, [index, shuffledWords]);\n\n  return (\n    <div>\n      <h1>Welcome</h1>\n      <div className=\"topContainer\">\n        <div className=\"animatedBoxContainer\">\n          {!animationFinished && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ duration: 0.5 }}\n            >\n              <motion.span\n                key={shuffledWords[index]}\n                initial={{ opacity: 0, y: 10 }}\n                animate={{ opacity: 1, y: 0 }}\n                exit={{ opacity: 0, y: -10 }}\n                transition={{ duration: 0.8 }}\n                className=\"animatedWord\"\n              >\n                {shuffledWords[index]}\n              </motion.span>\n            </motion.div>\n          )}\n        </div>\n        <div>\n          <p className=\"animatedWord\">design</p>\n        </div>\n      </div>\n      <div>\n        <Link href=\"/work\">\n          View Projects\n        </Link>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,UAAU;AACV,MAAM,QAAQ;IAAC;IAAQ;IAAW;IAAa;IAAM;IAAM;CAAQ;AAEnE,eAAe;AACf,MAAM,eAAe,CAAC;IACpB,OAAO;WAAI;KAAM,CAAC,IAAI,CAAC,IAAM,KAAK,MAAM,KAAK;AAC/C;AAEO,SAAS;IACd,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAC/D,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,iBAAiB,aAAa,SAAS,qBAAqB;IAC9D,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,QAAQ,cAAc,MAAM,EAAE;YAChC,MAAM,UAAU,WAAW;gBACzB,SAAS,CAAC,OAAS,OAAO;YAC5B,GAAG,OAAO,eAAe;YAEzB,OAAO,IAAM,aAAa;QAC5B,OAAO;YACL,qBAAqB;QACvB;IACF,GAAG;QAAC;QAAO;KAAc;IAEzB,qBACE,8OAAC;;0BACC,8OAAC;0BAAG;;;;;;0BACJ,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCACZ,CAAC,mCACA,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;4BACT,SAAS;gCAAE,SAAS;4BAAE;4BACtB,SAAS;gCAAE,SAAS;4BAAE;4BACtB,YAAY;gCAAE,UAAU;4BAAI;sCAE5B,cAAA,8OAAC,0LAAA,CAAA,SAAM,CAAC,IAAI;gCAEV,SAAS;oCAAE,SAAS;oCAAG,GAAG;gCAAG;gCAC7B,SAAS;oCAAE,SAAS;oCAAG,GAAG;gCAAE;gCAC5B,MAAM;oCAAE,SAAS;oCAAG,GAAG,CAAC;gCAAG;gCAC3B,YAAY;oCAAE,UAAU;gCAAI;gCAC5B,WAAU;0CAET,aAAa,CAAC,MAAM;+BAPhB,aAAa,CAAC,MAAM;;;;;;;;;;;;;;;kCAYjC,8OAAC;kCACC,cAAA,8OAAC;4BAAE,WAAU;sCAAe;;;;;;;;;;;;;;;;;0BAGhC,8OAAC;0BACC,cAAA,8OAAC,4JAAA,CAAA,UAAI;oBAAC,MAAK;8BAAQ;;;;;;;;;;;;;;;;;AAM3B"}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}